{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/Documents/Projets-ESILV/NodeJS/live-chat/src/App/App.js\";\nimport React, { useState } from 'react';\nimport SidePanel from './SidePanel/SidePanel';\nimport ChatContent from './ChatContent/ChatContent';\nimport './App.css';\nimport './Fonts.css';\nimport Client from '../api/connection';\nimport Overlay from './Overlay/Overlay';\nimport { createEmitAndSemanticDiagnosticsBuilderProgram } from 'typescript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new Client();\nclass MessageItem {\n  constructor({\n    username,\n    body,\n    date = new Date()\n  }) {\n    this.username = username;\n    this.body = body;\n    this.date = date;\n  }\n}\nclass Channel {\n  constructor(path) {\n    this.path = path;\n    this.messages = [];\n  }\n  addMessage(message) {\n    this.messages.push(message);\n  }\n  addMessageRange(messages) {\n    this.messages.push(...messages);\n  }\n}\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channels: {},\n      currentPath: null,\n      username: null\n    };\n    client.connect();\n    client.onMessage(details => {\n      this.addMessage(details.channel, new MessageItem({\n        username: details.username,\n        body: details.body,\n        date: new Date(details.createdAt)\n      }));\n    });\n  }\n  setUsername(username) {\n    this.setState({\n      username: username\n    });\n    client.setUsername(username);\n  }\n  addMessage(channelPath, message) {\n    this.addMessageRange(channelPath, [message]);\n  }\n  addMessageRange(channelPath, message) {\n    const nextChannel = {};\n    for (const key in this.state.channels) {\n      const channel = this.state.channels[key];\n      if (channel.path === channelPath) {\n        channel.addMessageRange(message);\n      }\n      nextChannel[key] = channel;\n    }\n    this.setState({\n      channels: nextChannel\n    });\n  }\n  sendMessage(message) {\n    const channelPath = this.state.currentPath;\n    const ms = new MessageItem({\n      username: this.state.username,\n      body: message,\n      date: new Date()\n    });\n    this.addMessage(channelPath, ms);\n    client.sendMessage(channelPath, message);\n  }\n  addChannel() {\n    const channelPath = prompt(\"Enter channel path\");\n    if (this.state.channels[channelPath] != undefined) {\n      return;\n    }\n    client.joinChannel(channelPath);\n    client.getMessages(channelPath).then(messages => {\n      this.addMessageRange(channelPath, messages.map(msg => new MessageItem({\n        username: msg.username,\n        body: msg.body,\n        date: new Date(msg.created_at)\n      })));\n    });\n    this.setState({\n      channels: {\n        ...this.state.channels,\n        [channelPath]: new Channel(channelPath)\n      }\n    });\n    this.changeChannel(channelPath);\n  }\n  changeChannel(channelPath) {\n    this.setState({\n      currentPath: channelPath\n    });\n  }\n  render() {\n    var _this$state$channels$;\n    if (this.state.username == null) {\n      return /*#__PURE__*/_jsxDEV(Overlay, {\n        onSubmit: this.setUsername.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-content\",\n        children: [/*#__PURE__*/_jsxDEV(SidePanel, {\n          list: this.state.channels,\n          onNewChannel: this.addChannel.bind(this),\n          onChangeChannel: this.changeChannel.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatContent, {\n          channel: (_this$state$channels$ = this.state.channels[this.state.currentPath]) !== null && _this$state$channels$ !== void 0 ? _this$state$channels$ : null,\n          onSubmit: this.sendMessage.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","useState","SidePanel","ChatContent","Client","Overlay","createEmitAndSemanticDiagnosticsBuilderProgram","jsxDEV","_jsxDEV","client","MessageItem","constructor","username","body","date","Date","Channel","path","messages","addMessage","message","push","addMessageRange","App","Component","props","state","channels","currentPath","connect","onMessage","details","channel","createdAt","setUsername","setState","channelPath","nextChannel","key","sendMessage","ms","addChannel","prompt","undefined","joinChannel","getMessages","then","map","msg","created_at","changeChannel","render","_this$state$channels$","onSubmit","bind","fileName","_jsxFileName","lineNumber","columnNumber","className","children","list","onNewChannel","onChangeChannel"],"sources":["/Users/lucas/Documents/Projets-ESILV/NodeJS/live-chat/src/App/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport SidePanel from './SidePanel/SidePanel';\nimport ChatContent from './ChatContent/ChatContent';\n\nimport './App.css';\nimport './Fonts.css';\n\n\nimport Client from '../api/connection';\nimport Overlay from './Overlay/Overlay';\nimport { createEmitAndSemanticDiagnosticsBuilderProgram } from 'typescript';\n\nconst client = new Client();\n\n\nclass MessageItem {\n  constructor({ username, body, date = new Date() }) {\n    this.username = username;\n    this.body = body;\n    this.date = date;\n  }\n}\n\nclass Channel {\n  constructor(path) {\n    this.path = path;\n    this.messages = [];\n  }\n\n  addMessage(message) {\n    this.messages.push(message);\n  }\n\n  addMessageRange(messages) {\n    this.messages.push(...messages);\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      channels: {},\n      currentPath: null,\n      username: null,\n    }\n\n    client.connect();\n    client.onMessage((details) => {\n      this.addMessage(details.channel, new MessageItem({\n        username: details.username, \n        body: details.body,\n        date: new Date(details.createdAt),\n      }));\n    })\n  }\n\n  setUsername(username) {\n    this.setState({\n      username: username\n    });\n\n    client.setUsername(username);\n  }\n\n  addMessage(channelPath, message) {  \n    this.addMessageRange(channelPath, [message]);\n  }\n\n  addMessageRange(channelPath, message) {\n    const nextChannel = {};\n\n    for(const key in this.state.channels) {\n      const channel = this.state.channels[key];\n\n      if(channel.path === channelPath) {\n        channel.addMessageRange(message);\n      }\n\n      nextChannel[key] = channel;\n    }\n\n    this.setState({\n      channels: nextChannel\n    });\n  }\n\n  sendMessage(message) {\n    const channelPath = this.state.currentPath;\n\n    const ms = new MessageItem({\n      username: this.state.username, \n      body: message,\n      date: new Date(),\n    });\n\n    this.addMessage(channelPath, ms);\n    client.sendMessage(channelPath, message);\n  }\n\n  addChannel() {\n    const channelPath = prompt(\"Enter channel path\");\n\n    if(this.state.channels[channelPath] != undefined) {\n      return;\n    }\n    \n    client.joinChannel(channelPath);\n\n    client.getMessages(channelPath).then((messages) => {\n      this.addMessageRange(channelPath, messages.map((msg) => new MessageItem({\n        username: msg.username, \n        body : msg.body,\n        date: new Date(msg.created_at),\n      })));\n    });\n\n    this.setState({\n      channels: {\n        ...this.state.channels,\n        [channelPath]: new Channel(channelPath)\n      }\n    });\n\n    this.changeChannel(channelPath);\n  }\n\n  changeChannel(channelPath) {\n    this.setState({\n      currentPath: channelPath\n    });\n  }\n\n  render() {\n\n    if(this.state.username == null) {\n      return <Overlay onSubmit={this.setUsername.bind(this)}/>;\n    }\n\n    return (\n      <div className=\"app-container\">\n        <div className=\"app-content\">\n          <SidePanel list={this.state.channels} onNewChannel={this.addChannel.bind(this)} onChangeChannel={this.changeChannel.bind(this)}/>\n\n          <ChatContent channel={this.state.channels[this.state.currentPath] ?? null} onSubmit={this.sendMessage.bind(this)}/>\n        </div>\n      </div>\n    );\n  }\n\n  \n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}