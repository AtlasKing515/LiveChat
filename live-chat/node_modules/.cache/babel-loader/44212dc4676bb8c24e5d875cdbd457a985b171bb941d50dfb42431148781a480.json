{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/Documents/Projets-ESILV/NodeJS/live-chat/src/App/App.js\";\nimport React, { useState } from 'react';\nimport SidePanel from './SidePanel/SidePanel';\nimport ChatContent from './ChatContent/ChatContent';\nimport './App.css';\nimport './Fonts.css';\nimport Client from '../api/connection';\nimport Overlay from './Overlay/Overlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new Client();\nclass MessageItem {\n  constructor(username, body) {\n    this.username = username;\n    this.body = body;\n  }\n}\nclass Channel {\n  constructor(path) {\n    this.path = path;\n    this.messages = [];\n  }\n  addMessage(message) {\n    this.messages.push(message);\n  }\n}\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channels: {},\n      currentPath: null,\n      username: null\n    };\n    client.connect();\n    client.onMessage(details => {\n      console.log(\">> \", channel, body, username);\n      console.log(arguments);\n      this.addMessage(channel, new MessageItem(username, body));\n    });\n  }\n  setUsername(username) {\n    this.setState({\n      username: username\n    });\n    client.setUsername(username);\n  }\n  addMessage(channelPath, message) {\n    const nextChannel = {};\n    for (const key in this.state.channels) {\n      const channel = this.state.channels[key];\n      if (channel.path === channelPath) {\n        channel.addMessage(message);\n      }\n      nextChannel[key] = channel;\n    }\n    this.setState({\n      channels: nextChannel\n    });\n  }\n  sendMessage(message) {\n    const channelPath = this.state.currentPath;\n    const ms = new MessageItem(this.state.username, message);\n    this.addMessage(channelPath, ms);\n    client.sendMessage(channelPath, ms);\n  }\n  addChannel() {\n    const channelPath = prompt(\"Enter channel path\");\n    client.joinChannel(channelPath);\n    this.setState({\n      channels: {\n        ...this.state.channels,\n        [channelPath]: new Channel(channelPath)\n      }\n    });\n  }\n  changeChannel(channel) {\n    this.setState({\n      currentPath: channel.path\n    });\n  }\n  render() {\n    var _this$state$channels$;\n    if (this.state.username == null) {\n      return /*#__PURE__*/_jsxDEV(Overlay, {\n        onSubmit: this.setUsername.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-content\",\n        children: [/*#__PURE__*/_jsxDEV(SidePanel, {\n          list: this.state.channels,\n          onNewChannel: this.addChannel.bind(this),\n          onChangeChannel: this.changeChannel.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatContent, {\n          channel: (_this$state$channels$ = this.state.channels[this.state.currentPath]) !== null && _this$state$channels$ !== void 0 ? _this$state$channels$ : null,\n          onSubmit: this.sendMessage.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","useState","SidePanel","ChatContent","Client","Overlay","jsxDEV","_jsxDEV","client","MessageItem","constructor","username","body","Channel","path","messages","addMessage","message","push","App","Component","props","state","channels","currentPath","connect","onMessage","details","console","log","channel","arguments","setUsername","setState","channelPath","nextChannel","key","sendMessage","ms","addChannel","prompt","joinChannel","changeChannel","render","_this$state$channels$","onSubmit","bind","fileName","_jsxFileName","lineNumber","columnNumber","className","children","list","onNewChannel","onChangeChannel"],"sources":["/Users/lucas/Documents/Projets-ESILV/NodeJS/live-chat/src/App/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport SidePanel from './SidePanel/SidePanel';\nimport ChatContent from './ChatContent/ChatContent';\n\nimport './App.css';\nimport './Fonts.css';\n\n\nimport Client from '../api/connection';\nimport Overlay from './Overlay/Overlay';\n\nconst client = new Client();\n\n\nclass MessageItem {\n  constructor(username, body) {\n    this.username = username;\n    this.body = body;\n  }\n}\n\nclass Channel {\n  constructor(path) {\n    this.path = path;\n    this.messages = [];\n  }\n\n  addMessage(message) {\n    this.messages.push(message);\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      channels: {},\n      currentPath: null,\n      username: null,\n    }\n\n    client.connect();\n    client.onMessage((details) => {\n      console.log(\">> \", channel, body, username);\n      console.log(arguments);\n\n      this.addMessage(channel, new MessageItem(username, body));\n    })\n  }\n\n  setUsername(username) {\n    this.setState({\n      username: username\n    });\n\n    client.setUsername(username);\n  }\n\n  addMessage(channelPath, message) {\n    const nextChannel = {};\n\n    for(const key in this.state.channels) {\n      const channel = this.state.channels[key];\n\n      if(channel.path === channelPath) {\n        channel.addMessage(message);\n      }\n\n      nextChannel[key] = channel;\n    }\n\n    this.setState({\n      channels: nextChannel\n    });\n  }\n\n  sendMessage(message) {\n    const channelPath = this.state.currentPath;\n\n    const ms = new MessageItem(this.state.username, message);\n\n\n\n    this.addMessage(channelPath, ms);\n\n    client.sendMessage(channelPath, ms);\n  }\n\n  addChannel() {\n    const channelPath = prompt(\"Enter channel path\");\n    client.joinChannel(channelPath);\n\n    this.setState({\n      channels: {\n        ...this.state.channels,\n        [channelPath]: new Channel(channelPath)\n      }\n    });\n  }\n\n  changeChannel(channel) {\n    this.setState({\n      currentPath: channel.path\n    });\n  }\n\n  render() {\n\n    if(this.state.username == null) {\n      return <Overlay onSubmit={this.setUsername.bind(this)}/>;\n    }\n\n    return (\n      <div className=\"app-container\">\n        <div className=\"app-content\">\n          <SidePanel list={this.state.channels} onNewChannel={this.addChannel.bind(this)} onChangeChannel={this.changeChannel.bind(this)}/>\n\n          <ChatContent channel={this.state.channels[this.state.currentPath] ?? null} onSubmit={this.sendMessage.bind(this)}/>\n        </div>\n      </div>\n    );\n  }\n\n  \n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}