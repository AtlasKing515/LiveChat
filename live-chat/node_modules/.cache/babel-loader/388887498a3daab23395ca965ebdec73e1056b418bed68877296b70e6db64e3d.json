{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/Documents/Projets-ESILV/NodeJS/live-chat/src/App/App.js\";\nimport React, { useState } from 'react';\nimport SidePanel from './SidePanel/SidePanel';\nimport ChatContent from './ChatContent/ChatContent';\nimport './App.css';\nimport './Fonts.css';\nimport Client from '../api/connection';\nimport Overlay from './Overlay/Overlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new Client();\nclass Channel {\n  constructor(path) {\n    this.path = path;\n    this.messages = [];\n  }\n  addMessage(message) {\n    this.messages.push(message);\n  }\n}\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channels: {},\n      currentPath: null,\n      username: null\n    };\n    client.connect();\n    client.onMessage(({\n      channel,\n      body\n    }) => {\n      this.addMessage(channel, body);\n    });\n  }\n  setUsername(username) {\n    this.setState({\n      username: username\n    });\n  }\n  addMessage(channelPath, message) {\n    const nextChannel = {};\n    for (const key in this.state.channels) {\n      const channel = this.state.channels[key];\n      if (channel.path === channelPath) {\n        channel.addMessage(message);\n      }\n      nextChannel[key] = channel;\n    }\n    this.setState({\n      channels: nextChannel\n    });\n  }\n  sendMessage(message) {\n    const channelPath = this.state.currentPath;\n    this.addMessage(channelPath, message);\n    client.sendMessage(channelPath, message);\n  }\n  addChannel() {\n    const channelPath = prompt(\"Enter channel path\");\n    client.joinChannel(channelPath);\n    this.setState({\n      channels: {\n        ...this.state.channels,\n        [channelPath]: new Channel(channelPath)\n      }\n    });\n  }\n  changeChannel(channel) {\n    this.setState({\n      currentPath: channel.path\n    });\n  }\n  render() {\n    var _this$state$channels$;\n    if (this.state.username == null) {\n      return /*#__PURE__*/_jsxDEV(Overlay, {\n        onSubmit: this.setUsername.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-content\",\n        children: [/*#__PURE__*/_jsxDEV(SidePanel, {\n          list: this.state.channels,\n          onNewChannel: this.addChannel.bind(this),\n          onChangeChannel: this.changeChannel.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatContent, {\n          channel: (_this$state$channels$ = this.state.channels[this.state.currentPath]) !== null && _this$state$channels$ !== void 0 ? _this$state$channels$ : null,\n          onSubmit: this.sendMessage.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","useState","SidePanel","ChatContent","Client","Overlay","jsxDEV","_jsxDEV","client","Channel","constructor","path","messages","addMessage","message","push","App","Component","props","state","channels","currentPath","username","connect","onMessage","channel","body","setUsername","setState","channelPath","nextChannel","key","sendMessage","addChannel","prompt","joinChannel","changeChannel","render","_this$state$channels$","onSubmit","bind","fileName","_jsxFileName","lineNumber","columnNumber","className","children","list","onNewChannel","onChangeChannel"],"sources":["/Users/lucas/Documents/Projets-ESILV/NodeJS/live-chat/src/App/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport SidePanel from './SidePanel/SidePanel';\nimport ChatContent from './ChatContent/ChatContent';\n\nimport './App.css';\nimport './Fonts.css';\n\n\nimport Client from '../api/connection';\nimport Overlay from './Overlay/Overlay';\n\nconst client = new Client();\n\n\nclass Channel {\n  constructor(path) {\n    this.path = path;\n    this.messages = [];\n  }\n\n  addMessage(message) {\n    this.messages.push(message);\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      channels: {},\n      currentPath: null,\n      username: null,\n    }\n\n    client.connect();\n    client.onMessage(({ channel, body }) => {\n      this.addMessage(channel, body)\n    })\n  }\n\n  setUsername(username) {\n    this.setState({\n      username: username\n    });\n  }\n\n  addMessage(channelPath, message) {\n    const nextChannel = {};\n\n    for(const key in this.state.channels) {\n      const channel = this.state.channels[key];\n\n      if(channel.path === channelPath) {\n        channel.addMessage(message);\n      }\n\n      nextChannel[key] = channel;\n    }\n\n    this.setState({\n      channels: nextChannel\n    });\n  }\n\n  sendMessage(message) {\n    const channelPath = this.state.currentPath;\n\n    this.addMessage(channelPath, message);\n\n    client.sendMessage(channelPath, message);\n  }\n\n  addChannel() {\n    const channelPath = prompt(\"Enter channel path\");\n    client.joinChannel(channelPath);\n\n    this.setState({\n      channels: {\n        ...this.state.channels,\n        [channelPath]: new Channel(channelPath)\n      }\n    });\n  }\n\n  changeChannel(channel) {\n    this.setState({\n      currentPath: channel.path\n    });\n  }\n\n  render() {\n\n    if(this.state.username == null) {\n      return <Overlay onSubmit={this.setUsername.bind(this)}/>;\n    }\n\n    return (\n      <div className=\"app-container\">\n        <div className=\"app-content\">\n          <SidePanel list={this.state.channels} onNewChannel={this.addChannel.bind(this)} onChangeChannel={this.changeChannel.bind(this)}/>\n\n          <ChatContent channel={this.state.channels[this.state.currentPath] ?? null} onSubmit={this.sendMessage.bind(this)}/>\n        </div>\n      </div>\n    );\n  }\n\n  \n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}