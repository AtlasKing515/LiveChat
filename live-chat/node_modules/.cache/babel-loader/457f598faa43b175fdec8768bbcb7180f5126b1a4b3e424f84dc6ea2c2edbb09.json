{"ast":null,"code":"import { io } from \"socket.io-client\";\nclass Client {\n  connect() {\n    this.socket = io(\"http://localhost:3000\", {\n      transports: ['websocket']\n    });\n    this.socket.on(\"connect\", () => {\n      console.log(this.socket.id); // 'G5p5...'\n    });\n    this.socket.on(\"connect_error\", err => {\n      console.log(err); // true\n    });\n  }\n  setUsername(username) {\n    this.socket.emit(\"set-username\", username);\n  }\n  sendMessage(channelPath, content) {\n    this.socket.emit(\"message\", {\n      channel: channelPath,\n      body: content\n    });\n  }\n  onMessage(callback) {\n    this.socket.on(\"message\", callback);\n  }\n  joinChannel(channel) {\n    this.socket.emit(\"join-channel\", channel);\n  }\n  getMessages(channel, page = 0) {\n    this.socket.emit(\"get-messages\", channel, messages => {\n      console.log(messages);\n    });\n  }\n}\nexport default Client;","map":{"version":3,"names":["io","Client","connect","socket","transports","on","console","log","id","err","setUsername","username","emit","sendMessage","channelPath","content","channel","body","onMessage","callback","joinChannel","getMessages","page","messages"],"sources":["/Users/lucas/Documents/Projets-ESILV/NodeJS/live-chat/src/api/connection.js"],"sourcesContent":["import { io } from \"socket.io-client\";\n\nclass Client {\n\n    connect() {\n        this.socket = io(\"http://localhost:3000\", {\n            transports: ['websocket']\n        });\n    \n        this.socket.on(\"connect\", () => {\n            console.log(this.socket.id); // 'G5p5...'\n        });\n    \n        this.socket.on(\"connect_error\", (err) => {\n            console.log(err); // true\n        });\n    }\n\n    setUsername(username) {\n        this.socket.emit(\"set-username\", username);\n    }\n    \n    sendMessage(channelPath, content) {\n        this.socket.emit(\"message\", {\n            channel: channelPath,\n            body: content\n        });\n    }\n\n    onMessage(callback) {\n        this.socket.on(\"message\", callback);\n    }\n\n    joinChannel(channel) {\n        this.socket.emit(\"join-channel\", channel);\n    }\n\n    getMessages(channel, page = 0) {\n        this.socket.emit(\"get-messages\", channel, (messages) => {\n            console.log(messages);\n        });\n    }\n}\n\n\nexport default Client;"],"mappings":"AAAA,SAASA,EAAE,QAAQ,kBAAkB;AAErC,MAAMC,MAAM,CAAC;EAETC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,EAAE;MACtCI,UAAU,EAAE,CAAC,WAAW;IAC5B,CAAC,CAAC;IAEF,IAAI,CAACD,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,MAAM,CAACK,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC;IAEF,IAAI,CAACL,MAAM,CAACE,EAAE,CAAC,eAAe,EAAGI,GAAG,IAAK;MACrCH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC;EACN;EAEAC,WAAWA,CAACC,QAAQ,EAAE;IAClB,IAAI,CAACR,MAAM,CAACS,IAAI,CAAC,cAAc,EAAED,QAAQ,CAAC;EAC9C;EAEAE,WAAWA,CAACC,WAAW,EAAEC,OAAO,EAAE;IAC9B,IAAI,CAACZ,MAAM,CAACS,IAAI,CAAC,SAAS,EAAE;MACxBI,OAAO,EAAEF,WAAW;MACpBG,IAAI,EAAEF;IACV,CAAC,CAAC;EACN;EAEAG,SAASA,CAACC,QAAQ,EAAE;IAChB,IAAI,CAAChB,MAAM,CAACE,EAAE,CAAC,SAAS,EAAEc,QAAQ,CAAC;EACvC;EAEAC,WAAWA,CAACJ,OAAO,EAAE;IACjB,IAAI,CAACb,MAAM,CAACS,IAAI,CAAC,cAAc,EAAEI,OAAO,CAAC;EAC7C;EAEAK,WAAWA,CAACL,OAAO,EAAEM,IAAI,GAAG,CAAC,EAAE;IAC3B,IAAI,CAACnB,MAAM,CAACS,IAAI,CAAC,cAAc,EAAEI,OAAO,EAAGO,QAAQ,IAAK;MACpDjB,OAAO,CAACC,GAAG,CAACgB,QAAQ,CAAC;IACzB,CAAC,CAAC;EACN;AACJ;AAGA,eAAetB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}