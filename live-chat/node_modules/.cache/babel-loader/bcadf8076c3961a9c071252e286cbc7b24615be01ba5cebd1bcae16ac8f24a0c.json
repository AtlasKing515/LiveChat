{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/Documents/Projets-ESILV/NodeJS/live-chat/src/App/App.js\";\nimport React, { useState } from 'react';\nimport SidePanel from './SidePanel/SidePanel';\nimport ChatContent from './ChatContent/ChatContent';\nimport './App.css';\nimport './Fonts.css';\nimport Client from '../api/connection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new Client();\nclass Channel {\n  constructor(path) {\n    this.path = path;\n    this.messages = [];\n  }\n  addMessage(message) {\n    this.messages.push(message);\n  }\n}\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channels: {},\n      currentPath: null\n    };\n    client.connect();\n    client.onMessage(data => {\n      this.addMessage(\"123\", data);\n    });\n  }\n  addMessage(channelPath, message) {\n    const nextChannel = this.state.channels.map(item => {\n      if (item.path === channelPath) {\n        item.addMessage(message);\n      }\n      return item;\n    });\n    this.setState({\n      channel: nextChannel\n    });\n  }\n  sendMessage(channelPath, message) {\n    this.addMessage(channelPath, message);\n    client.sendMessage(channelPath, message);\n  }\n  addChannel() {\n    const channelPath = prompt(\"Enter channel path\");\n    client.joinChannel(channelPath);\n    this.setState({\n      channels: {\n        ...this.state.channels,\n        [channelPath]: new Channel(channelPath)\n      }\n    });\n  }\n  changeChannel(channel) {\n    console.log(\"Change channel\", channel);\n    this.setState({\n      currentPath: channel.path\n    });\n  }\n  render() {\n    var _this$state$channels$;\n    console.log(this.state.channels, this.state.currentPath);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-content\",\n        children: [/*#__PURE__*/_jsxDEV(SidePanel, {\n          list: this.state.channels,\n          onNewChannel: this.addChannel.bind(this),\n          onChangeChannel: this.changeChannel.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatContent, {\n          channel: (_this$state$channels$ = this.state.channels[this.state.currentPath]) !== null && _this$state$channels$ !== void 0 ? _this$state$channels$ : null,\n          onSubmit: this.sendMessage.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","useState","SidePanel","ChatContent","Client","jsxDEV","_jsxDEV","client","Channel","constructor","path","messages","addMessage","message","push","App","Component","props","state","channels","currentPath","connect","onMessage","data","channelPath","nextChannel","map","item","setState","channel","sendMessage","addChannel","prompt","joinChannel","changeChannel","console","log","render","_this$state$channels$","className","children","list","onNewChannel","bind","onChangeChannel","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit"],"sources":["/Users/lucas/Documents/Projets-ESILV/NodeJS/live-chat/src/App/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport SidePanel from './SidePanel/SidePanel';\nimport ChatContent from './ChatContent/ChatContent';\n\nimport './App.css';\nimport './Fonts.css';\n\n\nimport Client from '../api/connection';\n\nconst client = new Client();\n\n\nclass Channel {\n  constructor(path) {\n    this.path = path;\n    this.messages = [];\n  }\n\n  addMessage(message) {\n    this.messages.push(message);\n  }\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      channels: {},\n      currentPath: null,\n    }\n\n    client.connect();\n    client.onMessage((data) => {\n\n      this.addMessage(\"123\", data)\n    })\n  }\n\n  addMessage(channelPath, message) {\n    const nextChannel = this.state.channels.map((item) => {\n      if(item.path === channelPath) {\n        item.addMessage(message);\n      }\n      return item;\n    });\n\n    this.setState({\n      channel: nextChannel\n    });\n  }\n\n  sendMessage(channelPath, message) {\n    this.addMessage(channelPath, message);\n\n    client.sendMessage(channelPath, message);\n  }\n\n  addChannel() {\n    const channelPath = prompt(\"Enter channel path\");\n    client.joinChannel(channelPath);\n\n    this.setState({\n      channels: {\n        ...this.state.channels,\n        [channelPath]: new Channel(channelPath)\n      }\n    });\n  }\n\n  changeChannel(channel) {\n    console.log(\"Change channel\", channel);\n\n    this.setState({\n      currentPath: channel.path\n    });\n  }\n\n  render() {\n    console.log(this.state.channels, this.state.currentPath);\n\n    return (\n      <div className=\"app-container\">\n        <div className=\"app-content\">\n          <SidePanel list={this.state.channels} onNewChannel={this.addChannel.bind(this)} onChangeChannel={this.changeChannel.bind(this)}/>\n\n          <ChatContent channel={this.state.channels[this.state.currentPath] ?? null} onSubmit={this.sendMessage.bind(this)}/>\n        </div>\n      </div>\n    );\n  }\n\n  \n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}