{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/Documents/Projets-ESILV/NodeJS/live-chat/src/App/App.js\";\nimport React, { useState } from 'react';\nimport SidePanel from './SidePanel/SidePanel';\nimport ChatContent from './ChatContent/ChatContent';\nimport './App.css';\nimport './Fonts.css';\nimport Client from '../api/connection';\nimport Overlay from './Overlay/Overlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new Client();\nclass MessageItem {\n  constructor({\n    username,\n    body,\n    date = new Date()\n  }) {\n    this.username = username;\n    this.body = body;\n    this.date = date;\n  }\n}\nclass Channel {\n  constructor(path) {\n    this.path = path;\n    this.messages = [];\n  }\n  addMessage(message) {\n    this.messages.push(message);\n  }\n  addMessageRange(messages) {\n    this.messages.push(...messages);\n  }\n}\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channels: {},\n      currentPath: null,\n      username: null,\n      promptModal: []\n    };\n    client.connect();\n    client.onMessage(details => {\n      this.addMessage(details.channel, new MessageItem({\n        username: details.username,\n        body: details.body,\n        date: new Date(details.createdAt)\n      }));\n    });\n  }\n  setUsername(username) {\n    this.setState({\n      username: username\n    });\n    client.setUsername(username);\n  }\n  addMessage(channelPath, message) {\n    this.addMessageRange(channelPath, [message]);\n  }\n  addMessageRange(channelPath, message) {\n    const nextChannel = {};\n    for (const key in this.state.channels) {\n      const channel = this.state.channels[key];\n      if (channel.path === channelPath) {\n        channel.addMessageRange(message);\n      }\n      nextChannel[key] = channel;\n    }\n    this.setState({\n      channels: nextChannel\n    });\n  }\n  sendMessage(message) {\n    const channelPath = this.state.currentPath;\n    const ms = new MessageItem({\n      username: this.state.username,\n      body: message,\n      date: new Date()\n    });\n    this.addMessage(channelPath, ms);\n    client.sendMessage(channelPath, message);\n  }\n  async addChannel() {\n    try {\n      const channelPath = await this.pushPromptModal({\n        title: 'New Channel',\n        content: 'Type the name of the channel'\n      });\n      if (!channelPath) return;\n      if (this.state.channels[channelPath] != undefined) {\n        return;\n      }\n      client.joinChannel(channelPath);\n      client.getMessages(channelPath).then(messages => {\n        this.addMessageRange(channelPath, messages.map(msg => new MessageItem({\n          username: msg.username,\n          body: msg.body,\n          date: new Date(msg.created_at)\n        })));\n      });\n      this.setState({\n        channels: {\n          ...this.state.channels,\n          [channelPath]: new Channel(channelPath)\n        }\n      });\n      this.changeChannel(channelPath);\n    } catch (e) {}\n  }\n  changeChannel(channelPath) {\n    this.setState({\n      currentPath: channelPath\n    });\n  }\n  pushPromptModal({\n    title,\n    content\n  }) {\n    return new Promise((resolve, reject) => {\n      this.setState({\n        promptModal: [...this.state.promptModal, {\n          title: title,\n          content: content,\n          resolve,\n          reject\n        }]\n      });\n    });\n  }\n  render() {\n    var _this$state$channels$;\n    if (this.state.username == null) {\n      return /*#__PURE__*/_jsxDEV(Overlay, {\n        onSubmit: this.setUsername.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-content\",\n        children: [/*#__PURE__*/_jsxDEV(SidePanel, {\n          list: this.state.channels,\n          onNewChannel: this.addChannel.bind(this),\n          onChangeChannel: this.changeChannel.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatContent, {\n          channel: (_this$state$channels$ = this.state.channels[this.state.currentPath]) !== null && _this$state$channels$ !== void 0 ? _this$state$channels$ : null,\n          onSubmit: this.sendMessage.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), this.state.promptModal.map((modal, index) => {\n        return /*#__PURE__*/_jsxDEV(Prompt, {\n          title: modal.title,\n          content: modal.content,\n          onSubmit: modal.resolve,\n          onCancel: modal.reject\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","useState","SidePanel","ChatContent","Client","Overlay","jsxDEV","_jsxDEV","client","MessageItem","constructor","username","body","date","Date","Channel","path","messages","addMessage","message","push","addMessageRange","App","Component","props","state","channels","currentPath","promptModal","connect","onMessage","details","channel","createdAt","setUsername","setState","channelPath","nextChannel","key","sendMessage","ms","addChannel","pushPromptModal","title","content","undefined","joinChannel","getMessages","then","map","msg","created_at","changeChannel","e","Promise","resolve","reject","render","_this$state$channels$","onSubmit","bind","fileName","_jsxFileName","lineNumber","columnNumber","className","children","list","onNewChannel","onChangeChannel","modal","index","Prompt","onCancel"],"sources":["/Users/lucas/Documents/Projets-ESILV/NodeJS/live-chat/src/App/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport SidePanel from './SidePanel/SidePanel';\nimport ChatContent from './ChatContent/ChatContent';\n\nimport './App.css';\nimport './Fonts.css';\n\n\nimport Client from '../api/connection';\nimport Overlay from './Overlay/Overlay';\n\nconst client = new Client();\n\nclass MessageItem {\n  constructor({ username, body, date = new Date() }) {\n    this.username = username;\n    this.body = body;\n    this.date = date;\n  }\n}\n\nclass Channel {\n  constructor(path) {\n    this.path = path;\n    this.messages = [];\n  }\n\n  addMessage(message) {\n    this.messages.push(message);\n  }\n\n  addMessageRange(messages) {\n    this.messages.push(...messages);\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      channels: {},\n      currentPath: null,\n      username: null,\n\n      promptModal: [],\n    }\n\n    client.connect();\n    client.onMessage((details) => {\n      this.addMessage(details.channel, new MessageItem({\n        username: details.username, \n        body: details.body,\n        date: new Date(details.createdAt),\n      }));\n    });\n  }\n\n  setUsername(username) {\n    this.setState({\n      username: username\n    });\n\n    client.setUsername(username);\n  }\n\n  addMessage(channelPath, message) {  \n    this.addMessageRange(channelPath, [message]);\n  }\n\n  addMessageRange(channelPath, message) {\n    const nextChannel = {};\n\n    for(const key in this.state.channels) {\n      const channel = this.state.channels[key];\n\n      if(channel.path === channelPath) {\n        channel.addMessageRange(message);\n      }\n\n      nextChannel[key] = channel;\n    }\n\n    this.setState({\n      channels: nextChannel\n    });\n  }\n\n  sendMessage(message) {\n    const channelPath = this.state.currentPath;\n\n    const ms = new MessageItem({\n      username: this.state.username, \n      body: message,\n      date: new Date(),\n    });\n\n    this.addMessage(channelPath, ms);\n    client.sendMessage(channelPath, message);\n  }\n\n  async addChannel() {\n    try {\n      const channelPath = await this.pushPromptModal({\n        title: 'New Channel',\n        content: 'Type the name of the channel',\n      });\n      if(!channelPath) return;\n\n      if(this.state.channels[channelPath] != undefined) {\n        return;\n      }\n      \n      client.joinChannel(channelPath);\n  \n      client.getMessages(channelPath).then((messages) => {\n        this.addMessageRange(channelPath, messages.map((msg) => new MessageItem({\n          username: msg.username, \n          body : msg.body,\n          date: new Date(msg.created_at),\n        })));\n      });\n  \n      this.setState({\n        channels: {\n          ...this.state.channels,\n          [channelPath]: new Channel(channelPath)\n        }\n      });\n  \n      this.changeChannel(channelPath);\n    } catch(e) {}\n  }\n\n  changeChannel(channelPath) {\n    this.setState({\n      currentPath: channelPath\n    });\n  }\n\n  pushPromptModal({title, content}) {\n    return new Promise((resolve, reject) => {\n      this.setState({\n        promptModal: [...this.state.promptModal, {\n          title: title,\n          content: content,\n          resolve,\n          reject,\n        }]\n      });\n    });\n  }\n\n  render() {\n\n    if(this.state.username == null) {\n      return <Overlay onSubmit={this.setUsername.bind(this)}/>;\n    }\n\n    return (\n      <div className=\"app-container\">\n        <div className=\"app-content\">\n          <SidePanel list={this.state.channels} onNewChannel={this.addChannel.bind(this)} onChangeChannel={this.changeChannel.bind(this)}/>\n\n          <ChatContent channel={this.state.channels[this.state.currentPath] ?? null} onSubmit={this.sendMessage.bind(this)}/>\n        </div>\n\n        {this.state.promptModal.map((modal, index) => {\n          return <Prompt key={index} title={modal.title} content={modal.content} onSubmit={modal.resolve} onCancel={modal.reject}/>\n        })}\n      </div>\n    );\n  }\n\n  \n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}